{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "$CONTAINER_REGISTRY_USERNAME_myacr": {
                "username": "$CONTAINER_REGISTRY_USERNAME_myacr",
                "password": "$CONTAINER_REGISTRY_PASSWORD_myacr",
                "address": "$CONTAINER_REGISTRY_USERNAME_myacr.azurecr.io"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.1",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.1",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                },
                "env": {
                  "UpstreamProtocol": {
                    "value": "AMQPWS"
                  }
                }
              }
            }
          }
        },
        "modules": {
          "avaedge": {
            "version": "1.1",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/media/live-video-analytics:2",
              "createOptions": {
                "HostConfig": {
                  "LogConfig": {
                    "Type": "",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "10"
                    }
                  },
                  "Binds": [
                    "$VIDEO_OUTPUT_FOLDER_ON_DEVICE:/var/media/",
                    "$APPDATA_FOLDER_ON_DEVICE:/var/lib/azuremediaservices"
                  ],
                  "IpcMode": "host"
                }
              }
            }
          },
          "rtspsim": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/lva-utilities/rtspsim-live555:1.2",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "$VIDEO_INPUT_FOLDER_ON_DEVICE:/live/mediaServer/media"
                  ]
                }
              }
            }
          },
          "objectsEventFilter": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "$CONTAINER_REGISTRY_USERNAME_myacr.azurecr.io/objectseventfilter",
              "createOptions": {}
            }
          },
          "avaextension": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "intel/video-analytics-serving:0.4.1-dlstreamer-edge-ai-extension",
              "createOptions": {
                "ExposedPorts": {
                  "80/tcp": {},
                  "5001/tcp": {}
                },
                "Env": [
                  "PIPELINE_NAME=object_classification",
                  "PIPELINE_VERSION=vehicle_attributes_recognition"
                ],
                "HostConfig": {
                  "Binds": ["/tmp/:/tmp/"],
                  "PortBindings": {
                    "80/tcp": [
                      {
                        "HostPort": "8080"
                      }
                    ],
                    "5001/tcp": [
                      {
                        "HostPort": "5001"
                      }
                    ]
                  },
                  "LogConfig": {
                    "Type": "",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "10"
                    }
                  },
                  "IpcMode": "host"
                }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "ObjectsEventFilterToIoTHub": "FROM /messages/modules/objectsEventFilter/outputs/* INTO $upstream",
          "AVAToObjectsEventFilter": "FROM /messages/modules/avaedge/outputs/detectedObjects INTO BrokeredEndpoint(\"/modules/objectsEventFilter/inputs/detectedObjects\")",
          "AVADiagnosticsToIoTHub": "FROM /messages/modules/avaedge/outputs/AmsDiagnostics/* INTO $upstream",
          "AVAOperationalToIoTHub": "FROM /messages/modules/avaedge/outputs/AmsOperational/* INTO $upstream",
          "ObjectsEventFilterToAVA": "FROM /messages/modules/objectsEventFilter/outputs/objectsEventFilterTrigger INTO BrokeredEndpoint(\"/modules/avaedge/inputs/recordingTrigger\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "avaedge": {
      "properties.desired": {
        "applicationDataDirectory": "/var/lib/videoAnalyzer",
        "ProvisioningToken": "$AVA_PROVISIONING_TOKEN",
        "diagnosticsEventsOutputName": "diagnostics",
        "operationalEventsOutputName": "operational",
        "logLevel": "verbose",
        "logCategories": "application,events,mediaPipeline",
        "debugLogsDirectory": "/tmp/logs",
        "allowUnsecuredEndpoints": true,
        "telemetryOptOut": false
      }
    },
    "objectsEventFilter": {
      "properties.desired": {
        "objectTypeValue": "van",
        "objectTypeName": "type",
        "objectTagValue": "white",
        "objectTagName": "color",
        "objectConfidence": 0.8
      }
    }
  }
}
